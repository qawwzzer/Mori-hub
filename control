local config = {
	EnableHighJump = true,
	EnableWarpJump = true,
	EnableNoClip = false,
	DefaultJumpPower = 20,
	HighJumpPower = 50,
	WarpJumpPower = 20,
}

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local defaultJumpPower = config.DefaultJumpPower
local highJumpPower = config.HighJumpPower
local maxJumpPower = 100
local warpJumpPower = config.WarpJumpPower
local highJumpEnabled = config.EnableHighJump
local warpJumpEnabled = config.EnableWarpJump
local noClipEnabled = config.EnableNoClip

-- GUI
local screenGui = Instance.new("ScreenGui", playerGui)
screenGui.Name = "MORI"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 250, 0, 210)
mainFrame.Position = UDim2.new(0, 20, 0, 100)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame)

local titleLabel = Instance.new("TextLabel", mainFrame)
titleLabel.Size = UDim2.new(1, -20, 0, 25)
titleLabel.Position = UDim2.new(0, 10, 0, 10)
titleLabel.BackgroundTransparency = 1
titleLabel.Text = "MORI Control Panel"
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextScaled = true

-- High Jump UI
local jumpLabel = Instance.new("TextLabel", mainFrame)
jumpLabel.Size = UDim2.new(0, 150, 0, 25)
jumpLabel.Position = UDim2.new(0, 10, 0, 45)
jumpLabel.BackgroundTransparency = 1
jumpLabel.Text = "High Jump"
jumpLabel.TextColor3 = Color3.new(1,1,1)
jumpLabel.Font = Enum.Font.Gotham
jumpLabel.TextScaled = true
jumpLabel.TextXAlignment = Enum.TextXAlignment.Left

local jumpToggle = Instance.new("TextButton", mainFrame)
jumpToggle.Size = UDim2.new(0, 50, 0, 25)
jumpToggle.Position = UDim2.new(0, 170, 0, 45)
jumpToggle.BackgroundColor3 = highJumpEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
jumpToggle.TextColor3 = Color3.new(1,1,1)
jumpToggle.Font = Enum.Font.GothamBold
jumpToggle.TextScaled = true
jumpToggle.Text = highJumpEnabled and "ON" or "OFF"

local jumpInput = Instance.new("TextBox", mainFrame)
jumpInput.Size = UDim2.new(0, 230, 0, 25)
jumpInput.Position = UDim2.new(0, 10, 0, 75)
jumpInput.BackgroundColor3 = Color3.fromRGB(40,40,40)
jumpInput.TextColor3 = Color3.new(1,1,1)
jumpInput.Text = tostring(highJumpPower)
jumpInput.ClearTextOnFocus = false
jumpInput.Font = Enum.Font.Gotham
jumpInput.TextScaled = true
jumpInput.PlaceholderText = "ใส่ค่ากระโดด (สูงสุด 100)"

-- Warp Jump UI
local warpLabel = Instance.new("TextLabel", mainFrame)
warpLabel.Size = UDim2.new(0, 150, 0, 25)
warpLabel.Position = UDim2.new(0, 10, 0, 110)
warpLabel.BackgroundTransparency = 1
warpLabel.Text = "Warp Jump"
warpLabel.TextColor3 = Color3.new(1,1,1)
warpLabel.Font = Enum.Font.Gotham
warpLabel.TextScaled = true
warpLabel.TextXAlignment = Enum.TextXAlignment.Left

local warpToggle = Instance.new("TextButton", mainFrame)
warpToggle.Size = UDim2.new(0, 50, 0, 25)
warpToggle.Position = UDim2.new(0, 170, 0, 110)
warpToggle.BackgroundColor3 = warpJumpEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
warpToggle.TextColor3 = Color3.new(1,1,1)
warpToggle.Font = Enum.Font.GothamBold
warpToggle.TextScaled = true
warpToggle.Text = warpJumpEnabled and "ON" or "OFF"

local warpInput = Instance.new("TextBox", mainFrame)
warpInput.Size = UDim2.new(0, 230, 0, 25)
warpInput.Position = UDim2.new(0, 10, 0, 140)
warpInput.BackgroundColor3 = Color3.fromRGB(40,40,40)
warpInput.TextColor3 = Color3.new(1,1,1)
warpInput.Text = tostring(warpJumpPower)
warpInput.ClearTextOnFocus = false
warpInput.Font = Enum.Font.Gotham
warpInput.TextScaled = true
warpInput.PlaceholderText = "ใส่ความสูงในการวาร์ป"

-- NoClip UI
local noclipLabel = Instance.new("TextLabel", mainFrame)
noclipLabel.Size = UDim2.new(0, 150, 0, 25)
noclipLabel.Position = UDim2.new(0, 10, 0, 175)
noclipLabel.BackgroundTransparency = 1
noclipLabel.Text = "Delete door"
noclipLabel.TextColor3 = Color3.new(1,1,1)
noclipLabel.Font = Enum.Font.Gotham
noclipLabel.TextScaled = true
noclipLabel.TextXAlignment = Enum.TextXAlignment.Left

local noclipToggle = Instance.new("TextButton", mainFrame)
noclipToggle.Size = UDim2.new(0, 50, 0, 25)
noclipToggle.Position = UDim2.new(0, 170, 0, 175)
noclipToggle.BackgroundColor3 = noClipEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
noclipToggle.TextColor3 = Color3.new(1,1,1)
noclipToggle.Font = Enum.Font.GothamBold
noclipToggle.TextScaled = true
noclipToggle.Text = noClipEnabled and "ON" or "OFF"

-- Toggle GUI Button
local toggleButton = Instance.new("TextLabel", screenGui)
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 30, 0, 30)
toggleButton.Position = UDim2.new(0, 270, 0, 100)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextScaled = true
toggleButton.Text = "M"
toggleButton.TextXAlignment = Enum.TextXAlignment.Center
toggleButton.TextYAlignment = Enum.TextYAlignment.Center
toggleButton.Active = true

-- Drag toggle GUI
local dragging, dragInput, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	toggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
									  startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

toggleButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = toggleButton.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

toggleButton.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

toggleButton.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		if not dragging then
			mainFrame.Visible = not mainFrame.Visible
		end
	end
end)

-- Set Jump Power function
local function setJumpPower(power)
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if humanoid then
		humanoid.UseJumpPower = true
		humanoid.JumpPower = math.clamp(power, 0, maxJumpPower)
	end
end

-- Remove doors (BasePart with "door" in name)
local function removeDoors()
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") and string.find(obj.Name:lower(), "door") then
			obj:Destroy()
		end
	end
end

-- Setup Warp Jump (แก้ไข: วาปขึ้นอย่างเดียว ไม่วาปลง)
local function setupWarpJump(humanoid, rootPart)
	humanoid.Jumping:Connect(function(isJumping)
		if isJumping and warpJumpEnabled then
			rootPart.CFrame = rootPart.CFrame + Vector3.new(0, warpJumpPower, 0)
		end
	end)
end

-- Setup NoClip
local function setupNoClip(character)
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	RunService.Stepped:Connect(function()
		if noClipEnabled and humanoid and humanoid.Health > 0 then
			for _, part in pairs(character:GetDescendants()) do
				if part:IsA("BasePart") and part.CanCollide == true then
					part.CanCollide = false
				end
			end
		end
	end)
end

-- Setup Character
local function setupCharacter(char)
	local humanoid = char:WaitForChild("Humanoid")
	local root = char:WaitForChild("HumanoidRootPart")
	humanoid.AutoJumpEnabled = false -- ปิดกระโดดเอง
	humanoid.UseJumpPower = true
	wait(0.1)
	setJumpPower(highJumpEnabled and highJumpPower or defaultJumpPower)
	setupWarpJump(humanoid, root)
	setupNoClip(char)
end

if player.Character then setupCharacter(player.Character) end
player.CharacterAdded:Connect(setupCharacter)

-- Event connections for UI:

jumpToggle.MouseButton1Click:Connect(function()
	highJumpEnabled = not highJumpEnabled
	jumpToggle.Text = highJumpEnabled and "ON" or "OFF"
	jumpToggle.BackgroundColor3 = highJumpEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
	setJumpPower(highJumpEnabled and highJumpPower or defaultJumpPower)
end)

jumpInput.FocusLost:Connect(function()
	local num = tonumber(jumpInput.Text)
	if num and num > 0 and num <= maxJumpPower then
		highJumpPower = num
		if highJumpEnabled then setJumpPower(highJumpPower) end
	else
		jumpInput.Text = tostring(highJumpPower)
	end
end)

warpToggle.MouseButton1Click:Connect(function()
	warpJumpEnabled = not warpJumpEnabled
	warpToggle.Text = warpJumpEnabled and "ON" or "OFF"
	warpToggle.BackgroundColor3 = warpJumpEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
end)

warpInput.FocusLost:Connect(function()
	local num = tonumber(warpInput.Text)
	if num and num >= 1 and num <= 500 then
		warpJumpPower = num
	else
		warpInput.Text = tostring(warpJumpPower)
	end
end)

noclipToggle.MouseButton1Click:Connect(function()
	noClipEnabled = not noClipEnabled
	noclipToggle.Text = noClipEnabled and "ON" or "OFF"
	noclipToggle.BackgroundColor3 = noClipEnabled and Color3.fromRGB(0,170,0) or Color3.fromRGB(70,70,70)
	if noClipEnabled then
		removeDoors()
	end
end)
